<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.broad.mapper.PerMapper">

    <!-- 字段 -->
    <sql id="Field">
         fid,
	     fname,
	     userid,
	     remark,
	     ispublic,
	     filename,
	     urls,
	     address,
	     createdtime,
         flenth,
         fsize,
         ptype
    </sql>

    <!-- 字段值 -->
    <sql id="FieldValue">
        #{fid},
        #{fname},
        #{userid},
        #{remark},
        #{ispublic},
        #{filename},
        #{urls},
        #{address},
        #{createdtime},
        #{flenth},
        #{fsize},
        #{ptype}
    </sql>
    <!--表名 -->
    <sql id="tableName">
        programs
    </sql>
    <sql id="areatableName">
        area
    </sql>
    <sql id="userstable">
        userinfo
    </sql>

    <!--根据用户查询节目列表 -->
    <select id="getPerByUserlistPage" parameterType="Page" resultType="HashMap">
        select
        fid,
        fname,
        userid,
        remark,
        ispublic,
        filename,
        urls,
        address,
        createdtime,ptype,
        flenth,
        fsize,
        uname
        from
        <include refid="tableName"></include> g
        LEFT JOIN <include refid="userstable"></include> ui on g.userid=ui.userid
        <where>
            <choose>
                <when test="pd.ispublic != null and pd.ispublic != '' and pd.ispublic==0">
                    <choose>
                        <when test="pd.role !=null and pd.role!='' and pd.role==1"></when>
                        <when test="pd.aid !=null and pd.aid!='' ">
                            and ui.aid like  CONCAT(#{pd.aid},'%')
                        </when>
                        <otherwise>and ui.aid is null</otherwise>
                    </choose>
                    and ispublic=0
                </when>
                <when test="pd.ispublic != null and pd.ispublic != '' and pd.ispublic==1">
                    and ispublic=1
                </when>
                <otherwise>
                    <if test="pd.ispublic != null and pd.ispublic != '' and pd.ispublic==2">
                        and ptype=1
                    </if>
                    <choose>
                        <when test="pd.role !=null and pd.role!='' and pd.role==1"></when>
                        <when test="pd.aid !=null and pd.aid!='' ">
                            and (ui.aid like  CONCAT(#{pd.aid},'%' ) or ispublic=1)
                        </when>
                        <otherwise>and ( ui.aid is null or ispublic=1)</otherwise>
                    </choose>
                </otherwise>
            </choose>

            <if test="pd.fnamekey != null and pd.fnamekey != ''">
                and fname LIKE CONCAT(CONCAT('%', #{pd.fnamekey}),'%')
            </if>
            <if test="pd.unamekey != null and pd.unamekey != ''">
                and uname LIKE CONCAT(CONCAT('%', #{pd.unamekey}),'%')
                <!-- 				and ispublic=0 -->
            </if>

            <if test="pd.lastLoginStart!=null and pd.lastLoginStart!=''">
                and createdtime &gt;= #{pd.lastLoginStart}
            </if>
            <if test="pd.lastLoginEnd!=null and pd.lastLoginEnd!=''">
                and createdtime &lt;= #{pd.lastLoginEnd}
            </if>

            and islisten=1
        </where>
        order by  createdtime desc,fid desc
    </select>


    <select id="getPerByFidlist" parameterType="pd" resultType="HashMap">
        select
        fid,
        fname,
        g.userid as userid,
        remark,
        ispublic,
        filename,
        urls,
        address,
        createdtime,ptype,
        flenth,
        fsize,uname
        from
        <include refid="tableName"></include> g
        LEFT JOIN <include refid="userstable"></include> ui on g.userid=ui.userid
        <where>
            <choose>
                <when test="fidlist !=null and fidlist!='' and fidlist.size>0">
                    and fid in
                    <foreach collection="fidlist" index="index" item="item" open="(" separator="," close=")">
                        ${item}
                    </foreach>
                </when>
                <otherwise>and fid is null</otherwise>
            </choose>
        </where>
        order by  createdtime desc,fid desc
    </select>
    <!--查询公共节目列表 -->
    <select id="getPublicPerByUserlistPage" parameterType="Page" resultType="HashMap">
        select
        fid,
        fname,
        g.userid as userid,
        remark,
        ispublic,
        filename,
        urls,
        address,
        createdtime,ptype,
        flenth,
        fsize,uname
        from
        <include refid="tableName"></include> g
        LEFT JOIN <include refid="userstable"></include> ui on g.userid=ui.userid
        <where>
            <if test="pd.fnamekey != null and pd.fnamekey != ''">
                and fname LIKE CONCAT(CONCAT('%', #{pd.fnamekey}),'%')
            </if>
            <if test="pd.unamekey != null and pd.unamekey != ''">
                and uname LIKE CONCAT(CONCAT('%', #{pd.unamekey}),'%')
            </if>
            and islisten=1	and ispublic=1
        </where>
        order by  createdtime desc,fid desc
    </select>

    <!--根据编号获取编号信息 -->
    <select id="getPerByFid" parameterType="String" resultType="HashMap">
        select
        fid,
        fname,
        g.userid as userid,
        remark,
        ispublic,
        filename,
        urls,
        address,
        createdtime,ptype,
        flenth,
        fsize,uname
        from
        <include refid="tableName"></include> g
        LEFT JOIN <include refid="userstable"></include> ui on g.userid=ui.userid
        where fid = #{fid}
    </select>
    <select id="getMaxFileidofYear" parameterType="String" resultType="String">
        SELECT SUBSTRING(MAX(SUBSTRING(filename,3)),1,5)
        FROM <include refid="tableName"></include>
        where SUBSTRING(filename,1,2) = SUBSTRING(#{year},3)
    </select>
    <select id="getSpeMaxFileidofYear" parameterType="String" resultType="String">
        SELECT SUBSTRING(MAX(SUBSTRING(filename,3)),1,5)
        FROM <include refid="tableName"></include>
        where SUBSTRING(filename,1,2) = SUBSTRING(#{year},3)
        and ptype=1
    </select>

    <!--修改节目 -->
    <update id="editPerByFid" parameterType="Program">
        update
        <include refid="tableName"></include>
        set fid = #{fid}
        <if test="fname != null and fname != ''">
            ,fname = #{fname}
        </if>
        <if test="remark != null and remark != ''">
            ,remark = #{remark}
        </if>
        <if test="ispublic != null and ispublic != ''">
            ,ispublic = #{ispublic}
        </if>
        <if test="filename != null and filename != ''">
            ,filename = #{filename}
        </if>
        <if test="urls != null and urls != ''">
            ,urls = #{urls}
        </if>
        <if test="flenth != null and flenth != ''">
            ,flenth = #{flenth}
        </if>
        <if test="address != null and address != ''">
            ,address = #{address}
        </if>
        <if test="fsize != null and fsize != ''">
            ,fsize = #{fsize}
        </if>
        <if test="userid != null and userid != ''">
            ,userid = #{userid}
        </if>
        where fid = #{fid}
    </update>

    <!--新增节目 -->
    <insert id="addPer" parameterType="Program" useGeneratedKeys="true" keyProperty="fid">
        insert into
        <include refid="tableName"></include>
        (
        fname,
        filename,
        userid,
        ispublic,
        urls,
        address,
        flenth,
        fsize,
        createdtime,
        islisten,ptype

        ) values (
        #{fname},
        #{filename},
        #{userid},
        #{ispublic},
        #{urls},
        #{address},
        #{flenth},
        #{fsize},
        #{ createdtime},
        #{ islisten},#{ ptype}
        )
    </insert>
    <!--删除节目-->
    <delete id="deletePI" parameterType="String" flushCache="false">
        delete from
        <include refid="tableName"></include>
        where fid=#{fid}
    </delete>
    <!--编辑 -->
    <update id="updatePer" parameterType="pd">
        update
        <include refid="tableName"></include>
        set
        fname=#{fname},
        userid=#{userid},
        ispublic=#{ispublic},
        createdtime=#{createdtime},
        remark=#{remark}
        where
        fid=#{oldfid}
    </update>
    <!-- 	修改节目文件名 -->
    <update id="updateFilename" parameterType="pd">
        update
        <include refid="tableName"></include>
        set
        filename=#{filename}
        where
        fid=#{fid}
    </update>
    <update id="setIsListen" parameterType="pd">
        update
        <include refid="tableName"></include>
        set
        islisten=#{listenpass}
        where
        fid=#{fid}
    </update>
    <update id="setpublic" parameterType="pd">
        update
        <include refid="tableName"></include>
        set
        ispublic=#{ispublic}
        where
        fid=#{fid}
    </update>
    <update id="setSpePer" parameterType="pd">
        update  <include refid="tableName"></include>
        set   ptype=1
        <if test="flenth != null and flenth != ''">
            ,flenth = #{flenth}
        </if>
        <if test="filename != null and filename != ''">
            ,filename = #{filename}
        </if>
        where
        fid=#{fid}
    </update>

</mapper>